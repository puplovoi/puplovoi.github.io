<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C语言（1-6章）</title>
    <url>/2024/12/29/7379d433/</url>
    <content><![CDATA[<ol>
<li><p>C 语言程序的基本结构是（ ）。</p>
<p>A. 函数</p>
<p>B. 语句</p>
<p>C. 命令行</p>
<p>D. 顺序结构</p>
</li>
<li><p>C 语言程序是从 ( ) 开始执行的。</p>
<p>A. main 函数</p>
<p>B. 第一行代码</p>
<p>C. 其他函数</p>
<p>D. 首个函数</p>
</li>
<li><p>下面不是 C 语言合法的保留字的是（ ）。</p>
<p>A. Int</p>
<p>B. double</p>
<p>C. float</p>
<p>D. unsigned</p>
</li>
<li><p>以下用户自定义标识符中，合法的是（ ）。</p>
<p>A. 6fg</p>
<p>B. long</p>
<p>C. rand3</p>
<p>D. a - b</p>
</li>
<li><p>#define PI 3.14&#96;属于预处理命令的 ( ) 用法。</p>
<p>A. 宏定义</p>
<p>B. 文件包含</p>
<p>C. 条件编译</p>
<p>D. 常量</p>
</li>
<li><p><code>#include&lt;stdio.h&gt;</code>属于预处理命令的 ( )。</p>
<p>A. 宏定义</p>
<p>B. 条件编译</p>
<p>C. 文件包含</p>
<p>D. 常量</p>
</li>
<li><p>若有语句如下：</p>
<pre><code class="c">int a, b;
a = 21;
b = 5;
</code></pre>
<p>则表达式</p>
<pre><code class="c">b = a + 2 * b
</code></pre>
<p>的值为（ ）。</p>
<p>A. 5</p>
<p>B. 21</p>
<p>C. 115</p>
<p>D. 31</p>
</li>
<li><p>以下赋值表达式中，不正确的是 ( )。</p>
<p>A. a &#x3D; 3</p>
<p>B. a + b &#x3D; 3</p>
<p>C. a &#x3D; b &#x3D; 6</p>
<p>D. a &#x3D; b + c</p>
</li>
<li><p>若有语句如下：</p>
<pre><code class="c">int a, b;
a = 21;
b = 6;
</code></pre>
<p>则表达式</p>
<pre><code>a/b*b + a%b
</code></pre>
<p>的值为（ ）。</p>
<p>A. 21</p>
<p>B. 24</p>
</li>
<li><p>以下程序段实现了计算两个整数的平均值，请将程序填写完整。</p>
<pre><code class="c">int a = 3, b = 4;
double c;
c = __________;
printf(&quot;两个数的平均值为:%f&quot;, c);
</code></pre>
<p>A. <code>a + b/2</code></p>
<p>B. <code>(a + b)/2</code></p>
<p>C. <code>(a + b)%2</code></p>
<p>D. <code>(a + b)/2.0</code></p>
</li>
<li><p>C 语言中，如有定义 “int a &#x3D; 4, b &#x3D; 5;”，则表达式<code>a &gt; b ||!b</code>的值为 ( )。</p>
<p>A. 1</p>
<p>B. 0</p>
<p>C. false</p>
<p>D. true</p>
</li>
<li><p>C 语言中，若有定义 “int x;”，假如 x 的取值范围为 3 &lt; x &lt; 7，那么下列用来表示该变量范围的形式中错误的是 ( )。</p>
<p>A. 3 &lt; x &lt; 7</p>
<p>B. x &gt; 3 &amp;&amp; x &lt; 7</p>
<p>C. x &#x3D;&#x3D; 4 || x &#x3D;&#x3D; 5 || x &#x3D;&#x3D; 6</p>
<p>D.!(x &lt;&#x3D; 3) &amp;&amp;!(x &gt;&#x3D; 7)</p>
</li>
<li><p>执行下列程序段的结果（ ）。</p>
<pre><code class="c">int a = 1, b = 1, c = 1;
if (a!= b)
  c = 0;
printf(&quot;c=%d\n&quot;, c);
</code></pre>
<p>A. 0</p>
<p>B. 1</p>
<p>C. <code>c=0</code></p>
<p>D. <code>c=1</code></p>
</li>
<li><p>以下程序段的运行结果为（ ）。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main(void)
&#123;
  int a = 1, b = 2, t;
  if (a &gt; b)
  &#123;
    t = a;
    a = b;
    b = t;
  &#125;
  printf(&quot;a=%d,b=%d\n&quot;, a, b);
  return 0;
&#125;
</code></pre>
<p>A. <code>a = 1, b = 2</code></p>
<p>B. <code>a = 2, b = 1</code></p>
</li>
<li><p>以下程序段实现了判断输入整数的奇偶。请将程序填写完整。</p>
<pre><code class="c">int a;
printf(&quot;请输入一个整数: &quot;);
scanf(&quot;%d&quot;, &amp;a);
if (________________)
  printf(&quot;是奇数&quot;);
else
  printf(&quot;是偶数&quot;);
</code></pre>
<p>A. <code>a % 2!= 0</code></p>
<p>B. <code>a % 2 == 0</code></p>
<p>C. <code>a % 2 = 1</code></p>
<p>D. <code>a % 2!= 1</code></p>
</li>
<li><p>分析下面程序段的执行结果。</p>
<pre><code class="c">int x = 5, y = 0;
if (x &lt; 0)
  y = 5 * x + 1;
else if (x &lt; 5)
  y = 2 * x;
else
  y = x * x;
printf(&quot;y=%d&quot;, y);
</code></pre>
<p>A. <code>y = 0</code></p>
<p>B. <code>y = 6</code></p>
<p>C. <code>y = 16</code></p>
<p>D. <code>y = 25</code></p>
</li>
<li><p>以下程序的运行结果是 ( )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main()
&#123;
  int x = 1, a = 0, b = 0;
  switch (x)
  &#123;
  case 1:
    a++;
    break;
  case 2:
    b++;
    break;
  default:
    a++;
    b++;
    break;
  &#125;
  printf(&quot;a=%d,b=%d&quot;, a, b);
&#125;
</code></pre>
<p>A. <code>a = 1, b = 0</code></p>
<p>B. <code>a = 2, b = 1</code></p>
<p>C. <code>a = 1, b = 1</code></p>
<p>D. <code>a = 2, b = 2</code></p>
</li>
<li><p>执行下面的代码段之后，输出的是。</p>
<pre><code class="c">int a = 57;
switch (a / 10)
&#123;
case 10:
case 9:
  printf(&quot;A&quot;);
  break;
case 8:
  printf(&quot;B&quot;);
  break;
case 7:
case 6:
  printf(&quot;C&quot;);
  break;
default:
  printf(&quot;F&quot;);
  break;
&#125;
</code></pre>
<p>A. A</p>
<p>B. B</p>
<p>C. C</p>
<p>D. F</p>
</li>
<li><p>C 语言的控制流程包含顺序结构、选择结构和(           )结构三种基本结构。</p>
</li>
<li><p>在 VC 2010 中，执行下面的代码段后，变量 c 的值为 (   )。</p>
<pre><code class="c">int a, c;
a = 3;
c = sizeof(a);
</code></pre>
</li>
<li><p><code>(int) (4.5 + 1.6)</code>计算的结果是 (       )。</p>
</li>
<li><p>下面程序的运行结果是(         )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main(void)
&#123;
  int a = 4, b = 10, c = 3;
  if (a &gt; b)
    c = a + b;
  if (b &gt; c)
    c = b * c;
  else
    c = a * c;
  printf(&quot;%d&quot;, c);
  return 0;
&#125;
</code></pre>
</li>
<li><p>下面程序运行后，从键盘输入 3 和 5，程序的运行结果是(       )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main(void)
&#123;
  int x, y;
  scanf(&quot;%d%d&quot;, &amp;x, &amp;y);
  if (x &gt; y)
    x += 2;
  else if (x &lt; y)
    y += x;
  else
    y = x;
  printf(&quot;%d,%d&quot;, x, y);
&#125;
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>期末复习</category>
      </categories>
  </entry>
  <entry>
    <title>C语言（7-8章）</title>
    <url>/2024/12/29/720c3174/</url>
    <content><![CDATA[<ol>
<li><p>下面程序段的出结果是 ( )。</p>
<pre><code class="c">int n = 1;
while (n &lt;= 5)
&#123;
  printf(&quot;%d &quot;, n);
  n++;
&#125;
</code></pre>
<p>A. 1 1 1 1 1</p>
<p>B. 1 2 3 4 5</p>
<p>C. 5</p>
<p>D. 6</p>
</li>
<li><p>下列程序段的输出结果是 ( )。</p>
<pre><code class="c">int i, s = 0;
for (i = 1; i &lt;= 5; ++i)
  s = s + i;
printf(&quot;s=%d\n&quot;, s);
</code></pre>
<p>A. <code>s = 0</code></p>
<p>B. <code>s = 10</code></p>
<p>C. <code>s = 11</code></p>
<p>D. <code>s = 15</code></p>
</li>
<li><p>下面程序段执行后，s 的值为 ( )。</p>
<pre><code class="c">int k, s = 1;
for (k = 1; k &lt;= 5; ++k)
  s = s * k;
</code></pre>
<p>A. 5</p>
<p>B. 6</p>
<p>C. 120</p>
</li>
<li><p>下面程序段的运行结果是 ( )。</p>
<pre><code class="c">int i, sum = 0;
for (i = 1; i &lt;= 10; i++)
&#123;
  if (i == 5)
    break;
  sum += i;
&#125;
printf(&quot;%d\n&quot;, sum);
</code></pre>
</li>
<li><p>下面程序段的运行结果是 ( )。</p>
<pre><code class="c">int i, sum = 0;
for (i = 0; i &lt; 10; i++)
&#123;
  if (i % 2!= 0)
    continue;
  sum += i;
&#125;
printf(&quot;%d&quot;, sum);
</code></pre>
<p>A. 20</p>
<p>B. 25</p>
<p>C. 30</p>
<p>D. 46</p>
</li>
<li><p>以下关于函数的叙述中，错误的是 ( )。</p>
<p>A. 函数未被调用时，系统将不为形参分配内存单元。</p>
<p>B. 实参与形参的个数应相等，且实参与形参的类型应尽量对应一致。</p>
<p>C. 当形参是变量时，实参可以是常量、变量或表达式。</p>
<p>D. 形参可以是常量、变量或表达式。</p>
</li>
<li><p>函数调用在程序中出现的位置一般有 3 种方式，下面叙述中错误的是 ( )。</p>
<p>A. 函数调用可以作为一个函数的实参。</p>
<p>B. 函数调用可以作为一个函数的形参。</p>
<p>C. 函数调用可以作为独立的语句存在。</p>
<p>D. 函数调用可以出现在表达式中。</p>
</li>
<li><p>运行下面程序，输出结果是 ( )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int Fun(int u, int v);
int main()
&#123;
  int c, a = 2, b = 6;
  c = Fun(a, b);
  printf(&quot;%d\n&quot;, c);
  return 0;
&#125;
int Fun(int u, int v)
&#123;
  int w;
  w = u + v;
  return w;
&#125;
</code></pre>
<p>A. 6</p>
<p>B. 7</p>
<p>C. 8</p>
<p>D. 9</p>
</li>
<li><p>运行下面程序，输出结果是 ( )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
void Fun(int x);
int main()
&#123;
  Fun(12 + 5);
  return 0;
&#125;
void Fun(int x)
&#123;
  printf(&quot;%d\n&quot;, x);
&#125;
</code></pre>
<p>A. 12</p>
<p>B. 13</p>
<p>C. 17</p>
<p>D. 18</p>
</li>
<li><p>要用<code>sqrt(x)</code>数学函数，需要在程序开始处通过预处理指令引入头文件(          )</p>
<pre><code class="c">#include &lt;___&gt;
</code></pre>
</li>
<li><p>下面程序的输出结果是(        )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int max(int x, int y);
int main(void)
&#123;
  int a = 20, b = 10, c;
  c = max(a, b);
  printf(&quot;%d, &quot;, c);
  c = max(8, 2 + 3);
  printf(&quot;%d&quot;, c);
  return 0;
&#125;
int max(int x, int y)
&#123;
  int z;
  if (x &gt;= y)
    z = x;
  else
    z = y;
  return z;
&#125;
</code></pre>
</li>
<li><p>下面程序的运行结果是(        )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int fun(int n);
int main(void)
&#123;
  int x = 5, y;
  y = fun(x);
  printf(&quot;y=%d&quot;, y);
  return 0;
&#125;
int fun(int n)
&#123;
  if (n == 1)
    return 1;
  else
    return (n + fun(n - 1));
&#125;
</code></pre>
</li>
<li><p>以下程序可实现数列的和<code>sum = 1 - 1/2 + 1/3 - 1/4 + ⋯ + 1/99 - 1/100</code>。请将程序补充完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main(void)
&#123;
  [填空1];
  int i;
  double j = 1.0;
  for (i = 1; i &lt;= 100; i++)
  &#123;
    sum = sum + j / i;
    j = [填空2]; // 修改下一项的分子
  &#125;
  printf(&quot;sum=%f&quot;, sum);
  return 0;
&#125;
</code></pre>
</li>
<li><p>下面的程序用递归方法实现了求斐波那契数列的第 n 项。请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int fib(int n);
int main(void)
&#123;
  int n;
  printf(&quot;请输入要计算的项数n = &quot;);
  scanf(&quot;%d&quot;, &amp;n);
  printf(&quot;数列的第%d项是：&quot;, fib(n));
  return 0;
&#125;
int fib(int n)
&#123;
  if (n == 1 || n == 2)
    return([填空1]);
  else
    return(fib(n - 1)+ fib([填空2]));
&#125;
</code></pre>
</li>
<li><p>下面程序的功能是判断输入的一个整数是不是素数。请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
int IsPrime(int n);
int main(void)
&#123;
  int m;
  printf(&quot;请输入1个非负整数的值：&quot;);
  scanf(&quot;%d&quot;, &amp;m);
  if (IsPrime([填空1]) == 1)
    printf(&quot;%d是素数&quot;, m);
&#125;
int IsPrime(int n)
&#123;
  int i, flag = 1;
  for (i = 2; i &lt;= [填空2]; i++)
  &#123;
    if (n % i == 0)
    &#123;
      flag = 0;
      break;
    &#125;
  &#125;
  return flag;
&#125;
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>期末复习</category>
      </categories>
  </entry>
  <entry>
    <title>C语言（9-12章）</title>
    <url>/2024/12/30/e9f78b55/</url>
    <content><![CDATA[<ol>
<li><p>若用数组名作为函数调用的实参，则实际上传递给形参的是 ( )。</p>
<p>A. 数组中全部元素的值</p>
<p>B. 数组中第一个元素的值</p>
<p>C. 数组元素的个数</p>
<p>D. 数组的首地址</p>
</li>
<li><p>在 C 语言中，以下关于数组的说法中正确的是 ( )。</p>
<p>A. 数组的下标是从 1 开始的</p>
<p>B. 不带下标的数组名代表数组的首地址，即第一个元素在内存中的地址</p>
<p>C. 二维数组在内存中是按列的顺序存储的</p>
<p>D. 数组的大小可以在程序运行中进行改变</p>
</li>
<li><p>下列一维数组初始化中正确的是 ( )。</p>
<p>A. <code>int a[10] = (1, 2, 3, 4, 5);</code></p>
<p>B. <code>int a[10] = &#123;1, 2, 3, 4, 5&#125;;</code></p>
<p>C. <code>int a[10] = [1, 2, 3, 4, 5];</code></p>
<p>D. <code>int a[10] = &#123;1; 2; 3; 4; 5&#125;;</code></p>
</li>
<li><p>下面一维数组定义中正确的是 ( )。</p>
<p>A. <code>int a(5);</code></p>
<p>B. <code>int a = &#123;1, 2, 3, 4, 5&#125;;</code></p>
<p>C. <code>int a[5*2];</code></p>
<p>D. <code>int a[];</code></p>
</li>
<li><p>已有定义</p>
<pre><code>int x[3][3] = &#123;1, 2, 3, 4, 5, 6, 7, 8, 9&#125;, i;
</code></pre>
<p>则下面语句的输出结果是 ( )。</p>
<pre><code class="c">for (i = 0; i &lt; 3; i++)
  printf(&quot;%2d&quot;, x[i][i]);
</code></pre>
<p>A. 1 4 7</p>
<p>B. 3 5 7</p>
<p>C. 1 5 9</p>
<p>D. 3 6 9</p>
</li>
<li><p>要存储字符串常量 “good” 的值，以下初始化形式中不正确的是 ( )。</p>
<p>A. <code>char s[4] = &#123;&#39;g&#39;, &#39;o&#39;, &#39;o&#39;, &#39;d&#39;&#125;;</code></p>
<p>B. <code>char s[5] = &#123;&#39;g&#39;, &#39;o&#39;, &#39;o&#39;, &#39;d&#39;, &#39;\0&#39;&#125;;</code></p>
<p>C. <code>char s[5] = &#123;&quot;good&quot;&#125;;</code></p>
<p>D. <code>char s[] = &quot;good&quot;;</code></p>
</li>
<li><p>以下定义并初始化字符数组中，正确的是 ( )。</p>
<p>A. <code>char s[] = &#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;\0&quot;&#125;;</code></p>
<p>B. <code>char s[] = &#39;abc&#39;;</code></p>
<p>C. <code>char s[] = &quot;abc&quot;;</code></p>
<p>D. <code>char s[] = abc;</code></p>
</li>
<li><p>以下程序的执行结果为 ( )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
struct color
&#123;
  int red;
  int green;
  int blue;
&#125;;
int main()
&#123;
  struct color c = &#123;100, 200, 255&#125;;
  printf(&quot;%d\n&quot;, c.green);
  return 0;
&#125;
</code></pre>
<p>A. 100</p>
<p>B. 200</p>
<p>C. 255</p>
<p>D. 0</p>
</li>
<li><p>下列程序的输出结果是 ( )。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
struct abc
&#123;
  int a, b, c;
&#125;;
int main()
&#123;
  struct abc s[2] = &#123;&#123;1, 2, 3&#125;, &#123;4, 5, 6&#125;&#125;;
  int t;
  t = s[0].a + s[1].b;
  printf(&quot;%d\n&quot;, t);
  return 0;
&#125;
</code></pre>
</li>
<li><p>c</p>
<pre><code class="c">struct date
&#123;
  int year;
  int month;
&#125;;
struct s
&#123;
  struct date birth;
  char name[20];
&#125;;
struct s x[4] = &#123;&#123;1977, 8, "hangzhou"&#125;, &#123;1975, 9, "Tianjin"&#125;&#125;;
</code></pre>
<p>语句</p>
<pre><code>printf(&quot;%c,%d\n&quot;, x[1].name[1], x[1].birth.year);
</code></pre>
<p>的输出结果为 ( )。</p>
<p>A. a,1977</p>
<p>B. hangzhou,1977</p>
<p>C. i,1975</p>
<p>D. Tianjin,1975</p>
</li>
<li><pre><code class="c">struct date
&#123;
  int year;
  int month;
&#125;;
struct s
&#123;
  struct date birth;
  char name[20];
&#125;;
struct s x[4] = &#123;&#123;1977, 8, "Hangzhou"&#125;, &#123;1975, 9, "Tianjin"&#125;&#125;;
</code></pre>
<p>语句</p>
<pre><code>printf(&quot;%c,%d\n&quot;, x[1].name[0], x[1].birth.year);
</code></pre>
<p>的输出结果为 ( )。</p>
<p>A. Hangzhou,1977</p>
<p>B. T,9</p>
<p>C. T,1975</p>
<p>D. Tianjin,1975</p>
</li>
<li><p>假设一个<code>int</code>型变量占用 4 个字节，若有定义如下：</p>
<pre><code class="c">int a[30] = &#123;1, 2, 3, 4, 5&#125;;
</code></pre>
<p>则数组<code>a</code>在内存中占用的字节数是(         )。</p>
</li>
<li><pre><code class="c">char s[] = &quot;abc\0de&quot;;
printf(&quot;%s&quot;, s);
</code></pre>
<p>上面程序段运行结果是(           )。</p>
</li>
<li><pre><code class="c">char s[] = &#123;&#39;a&#39;, &#39;b&#39;, &#39;\0&#39;, &#39;c&#39;, &#39;\0&#39;&#125;;
printf(&quot;%s&quot;, s);
</code></pre>
<p>上面程序段运行结果是(           )。</p>
</li>
<li><p>阅读下面程序，写出输出结果。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
void fun(char s[], char c1, char c2);
int main(void)
&#123;
  char s[80] = &quot;abcABC&quot;;
  fun(s, &#39;a&#39;, &#39;b&#39;);
  printf(&quot;%s\n&quot;, s);
  return 0;
&#125;
void fun(char str[], char c1, char c2)
&#123;
  int i;
  for (i = 0; str[i]!= &#39;\0&#39;; i++)
  &#123;
    if (str[i] == c1)
      str[i] = c2;
  &#125;
&#125;
</code></pre>
</li>
<li><p>下面程序的功能是求矩阵<code>a</code>的转置矩阵<code>b</code>并将其输出，请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
#define M 3
#define N 4
int main(void)
&#123;
  int a[M][N] = &#123;&#123;1, 2, 3, 4&#125;, &#123;5, 6, 7, 8&#125;, &#123;9, 10, 11, 12&#125;&#125;, i, j;
  [填空1];
  for (i = 0; i &lt; N; i++)
    for (j = 0; j &lt; M; j++)
      [填空2];
  printf(&quot;转置后的矩阵b：\n&quot;);
  for (i = 0; i &lt; N; i++)
  &#123;
    for (j = 0; j &lt; M; j++)
      printf(&quot;%3d&quot;, b[i][j]);
    printf(&quot;\n&quot;);
  &#125;
  return 0;
&#125;
</code></pre>
</li>
<li><p>下面程序的功能是利用二分查找法在 10 个数中查找 x，请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int Search(int a[], int n, int x);
int main(void)
&#123;
  int a[10] = &#123;3, 4, 7, 9, 10, 12, 16, 21, 23, 26&#125;;
  int i, x, p;
  printf(&quot;\n 请输入要查找的数：&quot;);
  scanf(&quot;%d&quot;, &amp;x);
  p = Search(a, 10, x);
  if ([填空1])
    printf(&quot;在数组中的第 %d 个位置 \n&quot;, p + 1);
  else
    printf(&quot;未找到!\n&quot;);
  return 0;
&#125;
int Search(int a[], int n, int x)
&#123;
  int low = 0, high = n - 1, mid;
  while (low &lt;= high)
  &#123;
    mid = (low + high) / 2;
    if (x &lt; a[mid])
      high = mid - 1;
    else if (x &gt; a[mid])
      [填空2];
    else
      return mid;
  &#125;
  return -1;
&#125;
</code></pre>
</li>
<li><p>以下程序的功能是统计键盘输入字符串的长度。请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int fun(char str[]);
int main()
&#123;
  char s[80];
  int c;
  printf(&quot;请输入一个字符串：&quot;);
  scanf(&quot;%s&quot;, s);
  c = fun(s);
  printf(&quot;%d\n&quot;, c);
  return 0;
&#125;
int fun(char str[])
&#123;
  int i = 0, len = 0;
  while ([填空1])
  &#123;
    [填空2];
    i++;
  &#125;
  return len;
&#125;
</code></pre>
</li>
<li><p>以下程序的功能是通过键盘输入一个字符串和一个字符，统计该字符在字符串中出现的次数。请将程序填写完整。</p>
<pre><code class="c">#include &lt;stdio.h&gt;
int main(void)
&#123;
  char s[80], c;
  int i, n = 0;
  printf(&quot;请输入一个字符串：&quot;);
  [填空1];
  printf(&quot;请输入一个字符：&quot;);
  scanf(&quot; %c&quot;, &amp;c);
  for (i = 0; s[i]!= &#39;\0&#39;; i++)
  &#123;
    if ([填空2])
      n++;
  &#125;
  printf(&quot;%c在字符串%s中出现了%d次。\n&quot;, c, s, n);
  return 0;
&#125;
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>期末复习</category>
      </categories>
  </entry>
</search>
